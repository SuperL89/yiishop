<?php

namespace common\models;

use Yii;
/**
 * This is the model class for table "{{%good}}".
 *
 * @property integer $id
 * @property integer $good_num
 * @property string $title
 * @property string $description
 * @property integer $cate_id
 * @property integer $brand_id
 * @property integer $status
 * @property integer $is_reco
 * @property integer $is_hot
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $user_id
 * @property integer $order
 *
 * @property Brand $brand
 * @property Category $cate
 * @property GoodClicks[] $goodClicks
 * @property GoodImage[] $goodImages
 * @property GoodMb[] $goodMbs
 * @property Order[] $orders
 */
class Good extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%good}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['good_num', 'title', 'description', 'cate_id', 'brand_id', 'is_hot', 'created_at', 'updated_at'], 'required'],
            [['good_num', 'cate_id', 'brand_id', 'status', 'is_reco', 'is_hot', 'created_at', 'updated_at', 'user_id', 'order'], 'integer'],
            [['title'], 'string', 'max' => 255],
            [['description'], 'string', 'max' => 500],
            [['brand_id'], 'exist', 'skipOnError' => true, 'targetClass' => Brand::className(), 'targetAttribute' => ['brand_id' => 'id']],
            [['cate_id'], 'exist', 'skipOnError' => true, 'targetClass' => Category::className(), 'targetAttribute' => ['cate_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'good_num' => 'SKU',
            'title' => '商品标题',
            'description' => '商品详细信息',
            'cate_id' => '分类',
            'brand_id' => '品牌',
            'status' => '状态',
            'is_reco' => '是否推荐',
            'is_hot' => '是否热门',
            'created_at' => '创建时间',
            'updated_at' => '更新时间',
            'user_id' => '用户id',
            'order' => '排序',
        ];
    }

    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBrand()
    {
        return $this->hasOne(Brand::className(), ['id' => 'brand_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCate()
    {
        return $this->hasOne(Category::className(), ['id' => 'cate_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGoodClicks()
    {
        return $this->hasMany(GoodClicks::className(), ['good_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGoodImages()
    {
        return $this->hasOne(GoodImage::className(), ['good_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGoodMbs()
    {
        return $this->hasMany(GoodMb::className(), ['good_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOrders()
    {
        return $this->hasMany(Order::className(), ['good_id' => 'id']);
    }
    const STATUS_DELETED = 1;
    const STATUS_ACTIVE = 0;
    /**
     * 设置后台商品状态显示常量
     */
    public static function allStatus()
    {
        return [self::STATUS_ACTIVE=>'正常',self::STATUS_DELETED=>'已禁用'];
    }
    /**
     * 获得后台商品状态并转为中文显示
     */
    public function getStatusStr()
    {
        return $this->status==self::STATUS_ACTIVE?'正常':'已禁用';
    }
    const IS_RECO = 1;
    const NO_RECO = 0;
    /**
     * 设置后台商品推荐显示常量
     */
    public static function allReco()
    {
        return [self::IS_RECO=>'是',self::NO_RECO=>'否'];
    }
    /**
     * 获得后台商品推荐并转为中文显示
     */
    public function getRecoStr()
    {
        return $this->status==self::IS_RECO?'是':'否';
    }
    const IS_HOT = 1;
    const NO_HOT = 0;
    /**
     * 设置后台商品推荐显示常量
     */
    public static function allHot()
    {
        return [self::IS_HOT=>'是',self::NO_HOT=>'否'];
    }
    /**
     * 获得后台商品推荐并转为中文显示
     */
    public function getHotStr()
    {
        return $this->status==self::IS_HOT?'是':'否';
    }
    
    //获得分类联动
    public $cate_id_1  = 0;
    public $cate_id_2 = 0;
    
    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->setCates($this->cate_id);
    }
    
    private function setCates($cate_id)
    {
        $category = new Category();
        //三级分类信息
        $cate_info = $category::findOne($cate_id);
        if($cate_info){
           //获得分类的父级id
            $this->cate_id_1 = $cate_info->parentid;
           //$this->cate_id_2 = $cate_info->parentid;
           //$cate2_info = $category::findOne($this->cate_id_2);
           //$this->cate_id_1 = $cate2_info->parentid;
        }
    }
}
